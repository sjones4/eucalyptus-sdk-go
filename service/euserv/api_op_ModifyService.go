// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package euserv

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/sjones4/eucalyptus-sdk-go/internal/awsutil"
)

type ModifyServiceInput struct {
	_ struct{} `type:"structure"`

	// Name is a required field
	Name *string `locationName:"Name" type:"string" required:"true"`

	// State is a required field
	State StateEnum `locationName:"State" type:"string" required:"true" enum:"true"`
}

// String returns the string representation
func (s ModifyServiceInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyServiceInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "ModifyServiceInput"}

	if s.Name == nil {
		invalidParams.Add(aws.NewErrParamRequired("Name"))
	}
	if len(s.State) == 0 {
		invalidParams.Add(aws.NewErrParamRequired("State"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type ModifyServiceOutput struct {
	_ struct{} `locationName:"ModifyServiceResponseType" type:"structure"`

	Metadata *ResponseMetadata `locationName:"EmpyreanMessage" type:"structure"`
}

// String returns the string representation
func (s ModifyServiceOutput) String() string {
	return awsutil.Prettify(s)
}

const opModifyService = "ModifyService"

// ModifyServiceRequest returns a request value for making API operation for
// Eucalyptus Cloud Service Management Service.
//
//    // Example sending a request using ModifyServiceRequest.
//    req := client.ModifyServiceRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/euserv-2010-01-01/ModifyService
func (c *Client) ModifyServiceRequest(input *ModifyServiceInput) ModifyServiceRequest {
	op := &aws.Operation{
		Name:       opModifyService,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyServiceInput{}
	}

	req := c.newRequest(op, input, &ModifyServiceOutput{})
	return ModifyServiceRequest{Request: req, Input: input, Copy: c.ModifyServiceRequest}
}

// ModifyServiceRequest is the request type for the
// ModifyService API operation.
type ModifyServiceRequest struct {
	*aws.Request
	Input *ModifyServiceInput
	Copy  func(*ModifyServiceInput) ModifyServiceRequest
}

// Send marshals and sends the ModifyService API request.
func (r ModifyServiceRequest) Send(ctx context.Context) (*ModifyServiceResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &ModifyServiceResponse{
		ModifyServiceOutput: r.Request.Data.(*ModifyServiceOutput),
		response:            &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// ModifyServiceResponse is the response type for the
// ModifyService API operation.
type ModifyServiceResponse struct {
	*ModifyServiceOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// ModifyService request.
func (r *ModifyServiceResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
