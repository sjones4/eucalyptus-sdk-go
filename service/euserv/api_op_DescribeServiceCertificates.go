// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package euserv

import (
	"context"
	"fmt"

	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/sjones4/eucalyptus-sdk-go/internal/awsutil"
)

type DescribeServiceCertificatesInput struct {
	_ struct{} `type:"structure"`

	Filters []Filter `locationName:"Filter" type:"list" flattened:"true"`

	FingerprintDigest *string `locationName:"FingerprintDigest" type:"string"`

	Format CertificateFormatEnum `locationName:"Format" type:"string" enum:"true"`
}

// String returns the string representation
func (s DescribeServiceCertificatesInput) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeServiceCertificatesInput) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "DescribeServiceCertificatesInput"}
	if s.Filters != nil {
		for i, v := range s.Filters {
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Filters", i), err.(aws.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type DescribeServiceCertificatesOutput struct {
	_ struct{} `locationName:"DescribeServiceCertificatesResponseType" type:"structure"`

	Metadata *ResponseMetadata `locationName:"EmpyreanMessage" type:"structure"`

	ServiceCertificates []ServiceCertificate `locationName:"serviceCertificates" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s DescribeServiceCertificatesOutput) String() string {
	return awsutil.Prettify(s)
}

const opDescribeServiceCertificates = "DescribeServiceCertificates"

// DescribeServiceCertificatesRequest returns a request value for making API operation for
// Eucalyptus Cloud Service Management Service.
//
//    // Example sending a request using DescribeServiceCertificatesRequest.
//    req := client.DescribeServiceCertificatesRequest(params)
//    resp, err := req.Send(context.TODO())
//    if err == nil {
//        fmt.Println(resp)
//    }
//
// Please also see https://docs.aws.amazon.com/goto/WebAPI/euserv-2010-01-01/DescribeServiceCertificates
func (c *Client) DescribeServiceCertificatesRequest(input *DescribeServiceCertificatesInput) DescribeServiceCertificatesRequest {
	op := &aws.Operation{
		Name:       opDescribeServiceCertificates,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeServiceCertificatesInput{}
	}

	req := c.newRequest(op, input, &DescribeServiceCertificatesOutput{})
	return DescribeServiceCertificatesRequest{Request: req, Input: input, Copy: c.DescribeServiceCertificatesRequest}
}

// DescribeServiceCertificatesRequest is the request type for the
// DescribeServiceCertificates API operation.
type DescribeServiceCertificatesRequest struct {
	*aws.Request
	Input *DescribeServiceCertificatesInput
	Copy  func(*DescribeServiceCertificatesInput) DescribeServiceCertificatesRequest
}

// Send marshals and sends the DescribeServiceCertificates API request.
func (r DescribeServiceCertificatesRequest) Send(ctx context.Context) (*DescribeServiceCertificatesResponse, error) {
	r.Request.SetContext(ctx)
	err := r.Request.Send()
	if err != nil {
		return nil, err
	}

	resp := &DescribeServiceCertificatesResponse{
		DescribeServiceCertificatesOutput: r.Request.Data.(*DescribeServiceCertificatesOutput),
		response:                          &aws.Response{Request: r.Request},
	}

	return resp, nil
}

// DescribeServiceCertificatesResponse is the response type for the
// DescribeServiceCertificates API operation.
type DescribeServiceCertificatesResponse struct {
	*DescribeServiceCertificatesOutput

	response *aws.Response
}

// SDKResponseMetdata returns the response metadata for the
// DescribeServiceCertificates request.
func (r *DescribeServiceCertificatesResponse) SDKResponseMetdata() *aws.Response {
	return r.response
}
