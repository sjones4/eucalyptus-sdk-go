// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package euserv

import (
	"github.com/aws/aws-sdk-go-v2/aws"
	"github.com/sjones4/eucalyptus-sdk-go/internal/awsutil"
)

var _ aws.Config
var _ = awsutil.Prettify

type Filter struct {
	_ struct{} `type:"structure"`

	// Name is a required field
	Name *string `locationName:"Name" type:"string" required:"true"`

	Values []string `locationName:"Value" type:"list" flattened:"true"`
}

// String returns the string representation
func (s Filter) String() string {
	return awsutil.Prettify(s)
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *Filter) Validate() error {
	invalidParams := aws.ErrInvalidParams{Context: "Filter"}

	if s.Name == nil {
		invalidParams.Add(aws.NewErrParamRequired("Name"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

type RegistrationMetadata struct {
	_ struct{} `type:"structure"`

	ReponseMetadata *ResponseMetadata `locationName:"EmpyreanMessage" type:"structure"`

	StatusMessages []StringEntry `locationName:"statusMessages" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s RegistrationMetadata) String() string {
	return awsutil.Prettify(s)
}

type ResponseMetadata struct {
	_ struct{} `type:"structure"`

	RequestId *string `locationName:"correlationId" type:"string"`

	Return *bool `locationName:"_return" type:"boolean"`
}

// String returns the string representation
func (s ResponseMetadata) String() string {
	return awsutil.Prettify(s)
}

type ServiceCertificate struct {
	_ struct{} `type:"structure"`

	Certificate *string `locationName:"certificate" type:"string"`

	CertificateFingerprint *string `locationName:"certificateFingerprint" type:"string"`

	CertificateFingerprintDigest *string `locationName:"certificateFingerprintDigest" type:"string"`

	CertificateFormat *string `locationName:"certificateFormat" type:"string"`

	CertificateUsage *string `locationName:"certificateUsage" type:"string"`

	ServiceType *string `locationName:"serviceType" type:"string"`
}

// String returns the string representation
func (s ServiceCertificate) String() string {
	return awsutil.Prettify(s)
}

type ServiceId struct {
	_ struct{} `type:"structure"`

	FullName *string `locationName:"fullName" type:"string"`

	Host *string `locationName:"host" type:"string"`

	Name *string `locationName:"name" type:"string"`

	Partition *string `locationName:"partition" type:"string"`

	Type *string `locationName:"type" type:"string"`

	Uri *string `locationName:"uri" type:"string"`
}

// String returns the string representation
func (s ServiceId) String() string {
	return awsutil.Prettify(s)
}

type ServiceStatus struct {
	_ struct{} `type:"structure"`

	LocalState *string `locationName:"localState" type:"string"`

	ServiceId *ServiceId `locationName:"serviceId" type:"structure"`
}

// String returns the string representation
func (s ServiceStatus) String() string {
	return awsutil.Prettify(s)
}

type ServiceType struct {
	_ struct{} `type:"structure"`

	ComponentCapitalizedName *string `locationName:"componentCapitalizedName" type:"string"`

	ComponentName *string `locationName:"componentName" type:"string"`

	Description *string `locationName:"description" type:"string"`

	HasCredentials *bool `locationName:"hasCredentials" type:"boolean"`

	Partitioned *bool `locationName:"partitioned" type:"boolean"`

	PublicApiService *bool `locationName:"publicApiService" type:"boolean"`

	Registerable *bool `locationName:"registerable" type:"boolean"`

	RequiresName *bool `locationName:"requiresName" type:"boolean"`

	ServiceGroupMembers []StringEntry `locationName:"serviceGroupMembers" locationNameList:"item" type:"list"`

	ServiceGroups []StringEntry `locationName:"serviceGroups" locationNameList:"item" type:"list"`
}

// String returns the string representation
func (s ServiceType) String() string {
	return awsutil.Prettify(s)
}

type StringEntry struct {
	_ struct{} `type:"structure"`

	Entry *string `locationName:"entry" type:"string"`
}

// String returns the string representation
func (s StringEntry) String() string {
	return awsutil.Prettify(s)
}
